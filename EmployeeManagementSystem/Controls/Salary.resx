<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>