<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>