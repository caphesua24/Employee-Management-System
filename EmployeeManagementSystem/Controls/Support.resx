<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>