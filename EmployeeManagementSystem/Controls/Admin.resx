<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pbWarningIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        0AAADdABEGw9BwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJLSURBVDhPjZFP
        TBNREMaf3EwIIURD/NNEQtTwR40QWgQqbamCplCDbalKt1u729I2XtQYT6IePBRDgtZ4qF5MvCAeWw/o
        wRgRDYdSbRCLtZbUg1q8VBqj8DnbXUUTUb/ky2xm3u/Nvhm2mspq3RVlW4+oGautUFL/J3WXs1nwexaG
        gy6YujsXNtZ37FFK/9JgyYFe14vUwwCQ92ImwmO3Rp+gQolc/4t27OX94RECMwI+Tbkpihg624vyal1A
        OfJnSe+0c67cYsKLzCMRXWYbkg845J/xMBiMOVa2f/X3Nxm5UPQ2dX0vIBYR0aizYuLOUeCjF6NBCzbV
        6UPK0d+lauLqAieEpW+zIvBWQPyeiGajFU/vEpwdwNcpDn2HOpfY5vZ6BVmRzuQcj0X9RRBvBEwTrCF4
        cozgtIfyIp6ErdjWoB9XEFnbW7ieSxd9RQgvZVjqXN9qkTtLcJIc53DabcLaan2PgrI1JhufzE4QnCJw
        Rr7gy3MBj8d4FGLHgVklnxKRHrWiqbUjKXFsp87pvnVdXk3xgORX0ppE3Bx24MMkT11pDsU8dU84cPWM
        GetqDG5m5/jc4jQl536B6XueVnXMYcfcfQfwWoGVWj5igb6DVtfncBUKcS9NlArSsCSnydKfvKNLs1TL
        UJynKDnrweeoFQajscAM3a7+k6c8y+GQD+GRgZ++ccWHa0EngoMWXD5vlX3BhqFzh8HZDi7XaPb1FydW
        ucu5RdXoadvQwGt/WNUgaEurzFpWqtay8pYVr29vY5XaKsYY+w6VZH1oAuRXdQAAAABJRU5ErkJggg==
</value>
  </data>
</root>