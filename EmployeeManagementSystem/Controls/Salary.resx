<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>